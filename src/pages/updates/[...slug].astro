---
import { getEntry } from 'astro:content';
import ChevronLeft from 'astro-heroicons/outline/ChevronLeft.astro';
import ChevronRight from 'astro-heroicons/outline/ChevronRight.astro';

import { URL_PREFIX } from "../../shared/config";
import Layout from '../../shared/layout/base-layout.astro';
import DateTime from '../../shared/date-time.component.astro';
import {
    getAndroidVersion,
    getEntryStaticPathsFromCollection,
    getEntryWithPrevNext,
    getPlatformSlug,
    getUpdateVersion,
    getVendorSlug
} from '../../shared/utilities';
import FileSignatures from './_file-signatures.component.astro';

export async function getStaticPaths() {
    return await getEntryStaticPathsFromCollection('updates');
}

const { slug } = Astro.params;
const platformSlug = getPlatformSlug(slug);
const vendor = await getEntry('vendors', getVendorSlug(slug));
const platform = await getEntry('platforms', platformSlug);
const { entry, previous, next } = await getEntryWithPrevNext('updates', slug, entry => entry.slug.startsWith(platformSlug));
const { Content } = await entry.render();
---
<Layout title={`${entry.data.id}`}>
    {(previous || next) && (
        <div class="flex max-sm:justify-between mb-4">
            {previous && (
                <a href={`${URL_PREFIX}updates/${previous.slug}`} class="self-start bg-slate-800 text-white py-2 pl-2 pr-4 rounded inline-flex items-center">
                    <ChevronLeft class="w-6 h-6" />
                    {getUpdateVersion(previous)}
                </a>
            )}

            {next && (
                <a href={`${URL_PREFIX}updates/${next.slug}`} class="self-end bg-slate-800 text-white ml-4 py-2 pr-2 pl-4 rounded inline-flex items-center">
                    {getUpdateVersion(next)}
                    <ChevronRight class="w-6 h-6" />
                </a>
            )}
        </div>
    )}

    <div class="prose dark:prose-invert break-words">
        <p>Version <strong>{getUpdateVersion(entry)}</strong> based on Android {getAndroidVersion(entry)} for {vendor.data.name} devices running on {platform.data.name} platform, built on <strong><DateTime date={entry.data.date} /></strong>.</p>

        <Content />
        {entry.data.signatures && <FileSignatures signatures={entry.data.signatures} />}

        <a href={`${URL_PREFIX}updates/${vendor.slug}`}>Back to all {vendor.data.name} updates</a>
    </div>
</Layout>
